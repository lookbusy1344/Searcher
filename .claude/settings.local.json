{
  "permissions": {
    "allow": [
      "Bash(dotnet build)",
      "Bash(dotnet clean:*)",
      "Bash(dir)",
      "Bash(find:*)",
      "Bash(dotnet build:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(dotnet test:*)",
      "Bash(dir:*)",
      "Bash(dotnet format:*)",
      "Read(//private/tmp/**)",
      "Bash(dotnet run:*)",
      "Bash(dotnet list package:*)",
      "Bash(dotnet list:*)",
      "Bash(dotnet add package:*)",
      "Bash(dotnet add:*)",
      "Skill(superpowers:writing-plans)",
      "Skill(superpowers:brainstorming)",
      "Skill(superpowers:subagent-driven-development)",
      "Bash(dotnet new:*)",
      "Bash(git log:*)",
      "Bash(test:*)",
      "Bash(git -C /Users/johnsparrow/Documents/dev/Searcher status)",
      "Bash(git -C /Users/johnsparrow/Documents/dev/Searcher add SearcherGui/App.axaml.cs SearcherGui/SearcherGui.csproj SearcherGui/Views/)",
      "Bash(git -C /Users/johnsparrow/Documents/dev/Searcher commit -m \"$(cat <<''EOF''\nfeat: create XAML UI and wire up ViewModel initialization\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")",
      "Bash(git -C /Users/johnsparrow/Documents/dev/Searcher log -1 --stat)",
      "Bash(dotnet sln:*)",
      "Bash(dotnet restore:*)",
      "Bash(timeout 5 dotnet run:*)",
      "Bash(timeout 3 dotnet run:*)",
      "Bash(git -C /Users/johnsparrow/Documents/dev/Searcher diff /Users/johnsparrow/Documents/dev/Searcher/Searcher.sln)",
      "Bash(git -C /Users/johnsparrow/Documents/dev/Searcher diff /Users/johnsparrow/Documents/dev/Searcher/Searcher.csproj)",
      "Bash(git -C /Users/johnsparrow/Documents/dev/Searcher log -1 --format='%H')",
      "Bash(gtimeout 5 dotnet run:*)",
      "Bash(dotnet:*)",
      "Bash(git -C /Users/johnsparrow/Documents/dev/Searcher show 835dd40dc1445ed4b04318bb3e5b271021a9ff30 --stat)",
      "Bash(git -C /Users/johnsparrow/Documents/dev/Searcher diff 0d34215..835dd40dc1445ed4b04318bb3e5b271021a9ff30)",
      "Skill(superpowers:using-superpowers)",
      "Bash(git -C /Users/johnsparrow/Documents/dev/Searcher add -A)",
      "Bash(git -C /Users/johnsparrow/Documents/dev/Searcher commit -m \"chore: delete obsolete Searcher WinForms application files\")",
      "Bash(git show:*)",
      "Bash(cat:*)",
      "Bash(xargs:*)",
      "Bash(timeout 60 dotnet test:*)",
      "Bash(git -C /Users/johnsparrow/Documents/dev/Searcher add:*)",
      "Bash(git -C /Users/johnsparrow/Documents/dev/Searcher commit -m \"$(cat <<''EOF''\nfix: handle missing Avalonia dispatcher in MainViewModel for test environments\n\nThe GUI was not displaying search results in unit tests because it relied on \nAvalonia.Threading.Dispatcher.UIThread being initialized, which is not available \nin non-GUI test environments. Added null checks to fall back to direct collection \nupdates when the dispatcher is unavailable.\n\nThis fixes the issue where the GUI command returned no matches - the problem was \nthat the test suite couldn''t detect the issue because there was no test coverage \nfor the actual UI search flow.\n\nðŸ¤– Generated with Claude Code\nEOF\n)\")",
      "Skill(superpowers:test-driven-development)",
      "Skill(superpowers:systematic-debugging)",
      "Bash(git -C /Users/johnsparrow/Documents/dev/Searcher diff)",
      "Bash(git -C /Users/johnsparrow/Documents/dev/Searcher log -5 --oneline)",
      "Bash(git -C /Users/johnsparrow/Documents/dev/Searcher commit -m \"$(cat <<''EOF''\nfix: prevent Finder from opening during tests\n\nAdded dependency injection for process launching in ResultInteractionService to\nenable test mocking. Tests were calling Process.Start(\"open\", \"-R\", filePath) on\nmacOS, which opened Finder windows at /private/var/folders during test execution.\n\nCreated IProcessLauncher interface and RealProcessLauncher implementation. Updated\nOpenFile() and ShowInFolder() to accept optional IProcessLauncher parameter with\ndefault real implementation. Tests now inject MockProcessLauncher that doesn''t\nstart actual processes.\n\nAll 104 tests pass without opening Finder.\n\nðŸ¤– Generated with [Claude Code](https://claude.com/claude-code)\n\nCo-Authored-By: Claude <noreply@anthropic.com>\nEOF\n)\")"
    ],
    "deny": [],
    "ask": []
  }
}